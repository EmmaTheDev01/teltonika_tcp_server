version: '3.8'

services:
  teltonika-tcp-server:
    build: .
    ports:
      - "5000:5000"  # TCP server port
      - "8080:8080"  # Health check port
    environment:
      - NODE_ENV=production
      - TCP_PORT=5000
      - TCP_HOST=0.0.0.0
      - WEB_APP_API_URL=${WEB_APP_API_URL:-http://localhost:3000/api/gps/teltonika}
      - API_TIMEOUT=10000
      - SERVER_ID=tcp-server-docker
      - LOG_LEVEL=info
      - ENABLE_DEBUG_LOGGING=false
      - MAX_CONNECTIONS=100
      - CONNECTION_TIMEOUT=30000
      - HEALTH_PORT=8080
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - teltonika-network

  # Optional: Add a test client for development
  test-client:
    build: .
    command: npm test
    depends_on:
      - teltonika-tcp-server
    environment:
      - TCP_HOST=teltonika-tcp-server
      - TCP_PORT=5000
    networks:
      - teltonika-network

networks:
  teltonika-network:
    driver: bridge
